@model StationLinerDataEntities.Models.Warehouse

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_FormLayout.cshtml";
}
@section BreadCrumbs{
    <li>Warehouses</li>
    <li>
        @Html.ActionLink("Manage Warehouses", "Index")
    </li>
    <li class="active">Create Warehouse</li>
        }
       @section PageTitle{
           Warehouse
           }
     @section Description{Create a new warehouse}
@section FormTitle{ New Warehouse}

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.WarehouseName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.WarehouseName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WarehouseName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WarehouseLocation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.WarehouseLocation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WarehouseLocation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WarehouseType, "WarehouseType", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("WarehouseType", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.WarehouseType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MaximumCapacity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MaximumCapacity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MaximumCapacity, "", new { @class = "text-danger" })
            </div>
        </div>

        

        <div class="pull-right col-md-10">
            <div class="actions col-md-offset-10">
                <input type="submit" value="Save Changes" class="btn btn-primary" />
            </div>
        </div>
    </div>
}


