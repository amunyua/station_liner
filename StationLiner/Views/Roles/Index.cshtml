@using System.Activities.Validation
@using System.Diagnostics
@using StationLinerDataEntities.Models
@model IEnumerable<StationLinerDataEntities.Models.Roles>


@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_DtLayout.cshtml";
 
}

        @section PageTitle{Manage Roles}
@section BreadCrumbs{
    <li>User Manager</li>
    <li class="active">Manage Roles</li>
    }
@section Actions{ 
    @{
        if (Flag.Status("ADD"))
        {
            <li><a href="@Url.Action("Create")" class="btn btn-sm btn-primary">Create New</a></li>
        }
    }
    }
@section TableHeader{All User Roles}

@{Html.RenderPartial("partials/_message");}

<table id="example2" class="table table-bordered table-hover">
    <thead>
            <tr>
        <th>
            @Html.DisplayNameFor(model => model.RoleId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RoleName)
        </th>
                <th>
                    @Html.DisplayNameFor(model => model.Description)
                </th>
                <th>Assign Menus</th>
       
        @{
            if (Flag.Status("EDIT"))
            {
                <th>Edit</th>
            }
        }        
        
                @{
                    if (Flag.Status("DELETE"))
                    {
                        <th>Delete</th>
                    }
                }    
    </tr>
    </thead>

@foreach (var item in Model) {
<tbody>
    <tr>

        <td>
            @Html.DisplayFor(modelItem => item.RoleId)
        </td>

        <td>
            @Html.DisplayFor(modelItem => item.RoleName)
        </td>

        <td>
            @Html.DisplayFor(modelItem => item.Description)
        </td>
        <td>
            <a href="#assign-roles-modal" role-name="@item.RoleName" role-id="@item.RoleId" data-toggle="modal" class="btn btn-success btn-xs assign-role-btn"><i class="fa fa-paper-clip"> </i> Assign Roles</a>
        </td>
        @{
            if (Flag.Status("EDIT"))
            {
                <td >
                        <a href="@Url.Action("Edit", new { id=item.RoleId })" class="btn btn-xs btn-primary"><i class="fa fa-edit"> </i> Edit</a > 
                </td>
            }
        }
        @{
    if (Flag.Status("DELETE"))
            {
                <td>
                    <a data-toggle="modal" data-target="#delete-modal" action="@Url.Action("Delete", new { id=item.RoleId })" class="btn btn-xs btn-danger delete-btn"><i class="fa fa-recycle"> </i> Delete</a>
                </td>
            }
}
    </tr>
    </tbody>
}

</table>

@*modal*@
<div class="modal fade" id="delete-modal" role="dialog">
    <form id="delete-modal-form" action="" method="post">
        @Html.AntiForgeryToken()
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <h4 class="modal-title">Delete Role</h4>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to delete this role?</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default pull-left" data-dismiss="modal">No</button>
                    <button type="submit" class="btn btn-danger">Delete</button>
                </div>
            </div>
            <!-- /.modal-content -->
        </div>
        <!-- /.modal-dialog -->
    </form>
</div>
@*modal for assigning roles*@
<div class="modal fade" id="assign-roles-modal" role="dialog">
    @Html.AntiForgeryToken()
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button"  class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title">Assign Roles to <strong><span id="role-name"></span></strong></h4>
            </div>
            <div class="modal-body">
                <div class="panel">
                    <div class="panel-body">
                        @{
                            var db = new IMSDataEntities();

                            if (Library.GetRoleName() == Constants.AdminRole)
                            {
                                var parentMenus = db.Menus.Where(x => x.ParentMenu == null);
                                if (parentMenus.Any())
                                {
                                    foreach (var parentMenu in parentMenus)
                                    {
                                        <ul>
                                            <li class="parent">
                                                <label class="parent-menu" value="@parentMenu.Id">@parentMenu.MenuName</label><span class=" col-md-offset-4"> @parentMenu.LayoutBase </span>
                                                @{
                                                    var childMenus = db.Menus.Where(x => x.ParentMenu == parentMenu.Id);
                                                    if (childMenus.Any())
                                                    {

                                                        <ul>
                                                            @foreach (var childMenu in childMenus)
                                                            {
                                                                <li class="menu-item-li">
                                                                    <input type="checkbox" class="assigned-unassigned" value="@childMenu.Id"/>@childMenu.MenuName
@*                                                                    @{*@
@*                                                                        var Actions = db.CrudActions;*@
@*                                                                        if (Actions.Any())*@
@*                                                                        {*@
@*                                                                            <ul class="permissions-list" style="display: none">*@
@*                                                                                @foreach (var action in Actions)*@
@*                                                                                {*@
@*                                                                                    <li>*@
@*                                                                                        @{*@
@*                                                                                            <input type="checkbox" value="@action.Id" class="individual-permission"/>*@
@*                                                                                            @action.ActionCode*@
@**@
@*                                                                                        }*@
@*                                                                                    </li>*@
@*                                                                                }*@
@*                                                                            </ul>*@
@*                                                                        }*@
                                                                    @*                                                                    }*@

                                                                    @{
                                                                        var allocatedActions = db.CrudMenuActions.Where(x => x.MenuId == childMenu.Id);
                                                                        if (allocatedActions.Any())
                                                                        {
                                                                            var allocatedAction = allocatedActions.FirstOrDefault();
                                                                            var action = allocatedAction.CrudActions.TrimStart(new char[] {'{', ','}).TrimEnd('}');
                                                                            var actions = action.Split(',');
                                                                            <ul class="permissions-list" style="display: none">
                                                                                @foreach (var actn in actions)
                                                                                {
                                                                                    <li>
                                                                                        @{
                                                                                            var id = Int64.Parse(actn);
                                                                                            var crud = db.CrudActions.Find(id);
                                                                                            <input type="checkbox" value="@crud.Id" class="individual-permission"/>
                                                                                            @crud.ActionCode

                                                                                        }
                                                                                    </li>
                                                                                }
                                                                            </ul>
                                                                        }

                                                                    }
                                                                </li>
                                                            }
                                                        </ul>
                                                    }
                                                }
                                            </li>
                                        </ul>

                                    }
                                }
                            }
                            else
                            {

//                                var parentMenus = db.Menus.Where(x => x.ParentMenu == null);
                                var menus = db.UserRoleAllocations.Where(x => x.RoleId == Library.UserRole).Select(x=>x.ParentId).Distinct();
                                if (menus.Any())
                                {
                                    foreach (var menu in menus)
                                    {
                                        <ul>
                                            <li class="parent">
                                                @{
                                                    var parentMenu = db.Menus.Find(menu);

                                                    <label class="parent-menu" value="@parentMenu.Id">@parentMenu.MenuName</label><span class=" col-md-offset-4"> @parentMenu.LayoutBase </span>

                                                    {
                                                        var allocatedChildMenus = db.UserRoleAllocations.Where(x => x.ParentId == parentMenu.Id);
                                                        if (allocatedChildMenus.Any())
                                                        {

                                                            <ul>
                                                                @foreach (var allocatedmenu in allocatedChildMenus)
                                                                {
                                                                    var childMenu = db.Menus.Find(allocatedmenu.MenuId);
                                                                    <li class="menu-item-li">
                                                                        <input type="checkbox" class="assigned-unassigned" value="@childMenu.Id"/>@childMenu.MenuName
                                                                        @{
                                                                            var allocatedActions = db.CrudMenuActions.Where(x => x.MenuId == childMenu.Id);
                                                                            if (allocatedActions.Any())
                                                                            {
                                                                                var allocatedAction = allocatedActions.FirstOrDefault();
                                                                                var action = allocatedAction.CrudActions.TrimStart(new char[] {'{', ','}).TrimEnd('}');
                                                                                var actions = action.Split(',');
                                                                                <ul class="permissions-list" style="display: none">
                                                                                @foreach (var actn in actions)
                                                                                {
                                                                                    <li>
                                                                                        @{
                                                                                            var crud = db.CrudActions.Find(actn);
                                                                                            <input type="checkbox" value="@crud.Id" class="individual-permission"/>
                                                                                            @crud.ActionCode

                                                                                        }
                                                                                    </li>
                                                                                }
                                                                                </ul>
                                                                            }

                                                                        }
                                                                    </li>
                                                                }
                                                            </ul>
                                                        }
                                                    }
                                                }
                                            </li>
                                        </ul>

                                    }
                                }
                            }
                        }
                    </div>
                </div>
            </div>
            @*                <div class="modal-footer">*@
            @*                    <button type="button" class="btn btn-default pull-left" data-dismiss="modal">No</button>*@
            @*                    <button type="submit" class="btn btn-danger">Delete</button>*@
            @*                </div>*@
            <input type="hidden" id="role-id" />
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>

@section Scripts{
    <script src="@Url.Content("~/Scripts/Roles/assign_roles.js")"></script>

}
